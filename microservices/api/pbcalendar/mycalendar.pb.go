// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mycalendar.proto

package pbcalendar

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateEventRequest struct {
	Alerttime            *Date    `protobuf:"bytes,1,opt,name=alerttime,proto3" json:"alerttime,omitempty"`
	Information          string   `protobuf:"bytes,2,opt,name=information,proto3" json:"information,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateEventRequest) Reset()         { *m = CreateEventRequest{} }
func (m *CreateEventRequest) String() string { return proto.CompactTextString(m) }
func (*CreateEventRequest) ProtoMessage()    {}
func (*CreateEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a09cb90c53a1eb3, []int{0}
}

func (m *CreateEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateEventRequest.Unmarshal(m, b)
}
func (m *CreateEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateEventRequest.Marshal(b, m, deterministic)
}
func (m *CreateEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateEventRequest.Merge(m, src)
}
func (m *CreateEventRequest) XXX_Size() int {
	return xxx_messageInfo_CreateEventRequest.Size(m)
}
func (m *CreateEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateEventRequest proto.InternalMessageInfo

func (m *CreateEventRequest) GetAlerttime() *Date {
	if m != nil {
		return m.Alerttime
	}
	return nil
}

func (m *CreateEventRequest) GetInformation() string {
	if m != nil {
		return m.Information
	}
	return ""
}

type CreateEventResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateEventResponse) Reset()         { *m = CreateEventResponse{} }
func (m *CreateEventResponse) String() string { return proto.CompactTextString(m) }
func (*CreateEventResponse) ProtoMessage()    {}
func (*CreateEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a09cb90c53a1eb3, []int{1}
}

func (m *CreateEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateEventResponse.Unmarshal(m, b)
}
func (m *CreateEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateEventResponse.Marshal(b, m, deterministic)
}
func (m *CreateEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateEventResponse.Merge(m, src)
}
func (m *CreateEventResponse) XXX_Size() int {
	return xxx_messageInfo_CreateEventResponse.Size(m)
}
func (m *CreateEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateEventResponse proto.InternalMessageInfo

func (m *CreateEventResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type DeleteEventRequest struct {
	Alerttime            *Date    `protobuf:"bytes,1,opt,name=alerttime,proto3" json:"alerttime,omitempty"`
	Information          string   `protobuf:"bytes,2,opt,name=information,proto3" json:"information,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteEventRequest) Reset()         { *m = DeleteEventRequest{} }
func (m *DeleteEventRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteEventRequest) ProtoMessage()    {}
func (*DeleteEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a09cb90c53a1eb3, []int{2}
}

func (m *DeleteEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteEventRequest.Unmarshal(m, b)
}
func (m *DeleteEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteEventRequest.Marshal(b, m, deterministic)
}
func (m *DeleteEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteEventRequest.Merge(m, src)
}
func (m *DeleteEventRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteEventRequest.Size(m)
}
func (m *DeleteEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteEventRequest proto.InternalMessageInfo

func (m *DeleteEventRequest) GetAlerttime() *Date {
	if m != nil {
		return m.Alerttime
	}
	return nil
}

func (m *DeleteEventRequest) GetInformation() string {
	if m != nil {
		return m.Information
	}
	return ""
}

type DeleteEventResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteEventResponse) Reset()         { *m = DeleteEventResponse{} }
func (m *DeleteEventResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteEventResponse) ProtoMessage()    {}
func (*DeleteEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a09cb90c53a1eb3, []int{3}
}

func (m *DeleteEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteEventResponse.Unmarshal(m, b)
}
func (m *DeleteEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteEventResponse.Marshal(b, m, deterministic)
}
func (m *DeleteEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteEventResponse.Merge(m, src)
}
func (m *DeleteEventResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteEventResponse.Size(m)
}
func (m *DeleteEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteEventResponse proto.InternalMessageInfo

func (m *DeleteEventResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type MoveEventRequest struct {
	Alerttime            *Date    `protobuf:"bytes,1,opt,name=alerttime,proto3" json:"alerttime,omitempty"`
	Information          string   `protobuf:"bytes,2,opt,name=information,proto3" json:"information,omitempty"`
	Newdate              *Date    `protobuf:"bytes,3,opt,name=newdate,proto3" json:"newdate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MoveEventRequest) Reset()         { *m = MoveEventRequest{} }
func (m *MoveEventRequest) String() string { return proto.CompactTextString(m) }
func (*MoveEventRequest) ProtoMessage()    {}
func (*MoveEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a09cb90c53a1eb3, []int{4}
}

func (m *MoveEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveEventRequest.Unmarshal(m, b)
}
func (m *MoveEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveEventRequest.Marshal(b, m, deterministic)
}
func (m *MoveEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveEventRequest.Merge(m, src)
}
func (m *MoveEventRequest) XXX_Size() int {
	return xxx_messageInfo_MoveEventRequest.Size(m)
}
func (m *MoveEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MoveEventRequest proto.InternalMessageInfo

func (m *MoveEventRequest) GetAlerttime() *Date {
	if m != nil {
		return m.Alerttime
	}
	return nil
}

func (m *MoveEventRequest) GetInformation() string {
	if m != nil {
		return m.Information
	}
	return ""
}

func (m *MoveEventRequest) GetNewdate() *Date {
	if m != nil {
		return m.Newdate
	}
	return nil
}

type MoveEventResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MoveEventResponse) Reset()         { *m = MoveEventResponse{} }
func (m *MoveEventResponse) String() string { return proto.CompactTextString(m) }
func (*MoveEventResponse) ProtoMessage()    {}
func (*MoveEventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a09cb90c53a1eb3, []int{5}
}

func (m *MoveEventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveEventResponse.Unmarshal(m, b)
}
func (m *MoveEventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveEventResponse.Marshal(b, m, deterministic)
}
func (m *MoveEventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveEventResponse.Merge(m, src)
}
func (m *MoveEventResponse) XXX_Size() int {
	return xxx_messageInfo_MoveEventResponse.Size(m)
}
func (m *MoveEventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveEventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MoveEventResponse proto.InternalMessageInfo

func (m *MoveEventResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type SinceEventsRequest struct {
	From                 *Date    `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SinceEventsRequest) Reset()         { *m = SinceEventsRequest{} }
func (m *SinceEventsRequest) String() string { return proto.CompactTextString(m) }
func (*SinceEventsRequest) ProtoMessage()    {}
func (*SinceEventsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a09cb90c53a1eb3, []int{6}
}

func (m *SinceEventsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SinceEventsRequest.Unmarshal(m, b)
}
func (m *SinceEventsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SinceEventsRequest.Marshal(b, m, deterministic)
}
func (m *SinceEventsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SinceEventsRequest.Merge(m, src)
}
func (m *SinceEventsRequest) XXX_Size() int {
	return xxx_messageInfo_SinceEventsRequest.Size(m)
}
func (m *SinceEventsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SinceEventsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SinceEventsRequest proto.InternalMessageInfo

func (m *SinceEventsRequest) GetFrom() *Date {
	if m != nil {
		return m.From
	}
	return nil
}

type SinceEvent struct {
	Alerttime            *Date    `protobuf:"bytes,1,opt,name=alerttime,proto3" json:"alerttime,omitempty"`
	Information          string   `protobuf:"bytes,2,opt,name=information,proto3" json:"information,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SinceEvent) Reset()         { *m = SinceEvent{} }
func (m *SinceEvent) String() string { return proto.CompactTextString(m) }
func (*SinceEvent) ProtoMessage()    {}
func (*SinceEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a09cb90c53a1eb3, []int{7}
}

func (m *SinceEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SinceEvent.Unmarshal(m, b)
}
func (m *SinceEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SinceEvent.Marshal(b, m, deterministic)
}
func (m *SinceEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SinceEvent.Merge(m, src)
}
func (m *SinceEvent) XXX_Size() int {
	return xxx_messageInfo_SinceEvent.Size(m)
}
func (m *SinceEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_SinceEvent.DiscardUnknown(m)
}

var xxx_messageInfo_SinceEvent proto.InternalMessageInfo

func (m *SinceEvent) GetAlerttime() *Date {
	if m != nil {
		return m.Alerttime
	}
	return nil
}

func (m *SinceEvent) GetInformation() string {
	if m != nil {
		return m.Information
	}
	return ""
}

type SinceEventsResponse struct {
	Events               []*SinceEvent `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *SinceEventsResponse) Reset()         { *m = SinceEventsResponse{} }
func (m *SinceEventsResponse) String() string { return proto.CompactTextString(m) }
func (*SinceEventsResponse) ProtoMessage()    {}
func (*SinceEventsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a09cb90c53a1eb3, []int{8}
}

func (m *SinceEventsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SinceEventsResponse.Unmarshal(m, b)
}
func (m *SinceEventsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SinceEventsResponse.Marshal(b, m, deterministic)
}
func (m *SinceEventsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SinceEventsResponse.Merge(m, src)
}
func (m *SinceEventsResponse) XXX_Size() int {
	return xxx_messageInfo_SinceEventsResponse.Size(m)
}
func (m *SinceEventsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SinceEventsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SinceEventsResponse proto.InternalMessageInfo

func (m *SinceEventsResponse) GetEvents() []*SinceEvent {
	if m != nil {
		return m.Events
	}
	return nil
}

type Count struct {
	Count                int32    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Count) Reset()         { *m = Count{} }
func (m *Count) String() string { return proto.CompactTextString(m) }
func (*Count) ProtoMessage()    {}
func (*Count) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a09cb90c53a1eb3, []int{9}
}

func (m *Count) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Count.Unmarshal(m, b)
}
func (m *Count) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Count.Marshal(b, m, deterministic)
}
func (m *Count) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Count.Merge(m, src)
}
func (m *Count) XXX_Size() int {
	return xxx_messageInfo_Count.Size(m)
}
func (m *Count) XXX_DiscardUnknown() {
	xxx_messageInfo_Count.DiscardUnknown(m)
}

var xxx_messageInfo_Count proto.InternalMessageInfo

func (m *Count) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type Date struct {
	Year                 int32    `protobuf:"varint,1,opt,name=Year,proto3" json:"Year,omitempty"`
	Month                int32    `protobuf:"varint,2,opt,name=Month,proto3" json:"Month,omitempty"`
	Day                  int32    `protobuf:"varint,3,opt,name=Day,proto3" json:"Day,omitempty"`
	Hour                 int32    `protobuf:"varint,4,opt,name=Hour,proto3" json:"Hour,omitempty"`
	Minute               int32    `protobuf:"varint,5,opt,name=Minute,proto3" json:"Minute,omitempty"`
	Second               int32    `protobuf:"varint,6,opt,name=Second,proto3" json:"Second,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Date) Reset()         { *m = Date{} }
func (m *Date) String() string { return proto.CompactTextString(m) }
func (*Date) ProtoMessage()    {}
func (*Date) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a09cb90c53a1eb3, []int{10}
}

func (m *Date) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Date.Unmarshal(m, b)
}
func (m *Date) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Date.Marshal(b, m, deterministic)
}
func (m *Date) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Date.Merge(m, src)
}
func (m *Date) XXX_Size() int {
	return xxx_messageInfo_Date.Size(m)
}
func (m *Date) XXX_DiscardUnknown() {
	xxx_messageInfo_Date.DiscardUnknown(m)
}

var xxx_messageInfo_Date proto.InternalMessageInfo

func (m *Date) GetYear() int32 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *Date) GetMonth() int32 {
	if m != nil {
		return m.Month
	}
	return 0
}

func (m *Date) GetDay() int32 {
	if m != nil {
		return m.Day
	}
	return 0
}

func (m *Date) GetHour() int32 {
	if m != nil {
		return m.Hour
	}
	return 0
}

func (m *Date) GetMinute() int32 {
	if m != nil {
		return m.Minute
	}
	return 0
}

func (m *Date) GetSecond() int32 {
	if m != nil {
		return m.Second
	}
	return 0
}

type EventsForDayRequest struct {
	Year                 int32    `protobuf:"varint,1,opt,name=Year,proto3" json:"Year,omitempty"`
	Month                int32    `protobuf:"varint,2,opt,name=Month,proto3" json:"Month,omitempty"`
	Day                  int32    `protobuf:"varint,3,opt,name=Day,proto3" json:"Day,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventsForDayRequest) Reset()         { *m = EventsForDayRequest{} }
func (m *EventsForDayRequest) String() string { return proto.CompactTextString(m) }
func (*EventsForDayRequest) ProtoMessage()    {}
func (*EventsForDayRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a09cb90c53a1eb3, []int{11}
}

func (m *EventsForDayRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventsForDayRequest.Unmarshal(m, b)
}
func (m *EventsForDayRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventsForDayRequest.Marshal(b, m, deterministic)
}
func (m *EventsForDayRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventsForDayRequest.Merge(m, src)
}
func (m *EventsForDayRequest) XXX_Size() int {
	return xxx_messageInfo_EventsForDayRequest.Size(m)
}
func (m *EventsForDayRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EventsForDayRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EventsForDayRequest proto.InternalMessageInfo

func (m *EventsForDayRequest) GetYear() int32 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *EventsForDayRequest) GetMonth() int32 {
	if m != nil {
		return m.Month
	}
	return 0
}

func (m *EventsForDayRequest) GetDay() int32 {
	if m != nil {
		return m.Day
	}
	return 0
}

type EventsForWeekRequest struct {
	Year                 int32    `protobuf:"varint,1,opt,name=Year,proto3" json:"Year,omitempty"`
	Week                 int32    `protobuf:"varint,2,opt,name=Week,proto3" json:"Week,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventsForWeekRequest) Reset()         { *m = EventsForWeekRequest{} }
func (m *EventsForWeekRequest) String() string { return proto.CompactTextString(m) }
func (*EventsForWeekRequest) ProtoMessage()    {}
func (*EventsForWeekRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a09cb90c53a1eb3, []int{12}
}

func (m *EventsForWeekRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventsForWeekRequest.Unmarshal(m, b)
}
func (m *EventsForWeekRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventsForWeekRequest.Marshal(b, m, deterministic)
}
func (m *EventsForWeekRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventsForWeekRequest.Merge(m, src)
}
func (m *EventsForWeekRequest) XXX_Size() int {
	return xxx_messageInfo_EventsForWeekRequest.Size(m)
}
func (m *EventsForWeekRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EventsForWeekRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EventsForWeekRequest proto.InternalMessageInfo

func (m *EventsForWeekRequest) GetYear() int32 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *EventsForWeekRequest) GetWeek() int32 {
	if m != nil {
		return m.Week
	}
	return 0
}

type EventsForMonthRequest struct {
	Year                 int32    `protobuf:"varint,1,opt,name=Year,proto3" json:"Year,omitempty"`
	Month                int32    `protobuf:"varint,2,opt,name=Month,proto3" json:"Month,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventsForMonthRequest) Reset()         { *m = EventsForMonthRequest{} }
func (m *EventsForMonthRequest) String() string { return proto.CompactTextString(m) }
func (*EventsForMonthRequest) ProtoMessage()    {}
func (*EventsForMonthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a09cb90c53a1eb3, []int{13}
}

func (m *EventsForMonthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventsForMonthRequest.Unmarshal(m, b)
}
func (m *EventsForMonthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventsForMonthRequest.Marshal(b, m, deterministic)
}
func (m *EventsForMonthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventsForMonthRequest.Merge(m, src)
}
func (m *EventsForMonthRequest) XXX_Size() int {
	return xxx_messageInfo_EventsForMonthRequest.Size(m)
}
func (m *EventsForMonthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EventsForMonthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EventsForMonthRequest proto.InternalMessageInfo

func (m *EventsForMonthRequest) GetYear() int32 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *EventsForMonthRequest) GetMonth() int32 {
	if m != nil {
		return m.Month
	}
	return 0
}

func init() {
	proto.RegisterType((*CreateEventRequest)(nil), "pbcalendar.CreateEventRequest")
	proto.RegisterType((*CreateEventResponse)(nil), "pbcalendar.CreateEventResponse")
	proto.RegisterType((*DeleteEventRequest)(nil), "pbcalendar.DeleteEventRequest")
	proto.RegisterType((*DeleteEventResponse)(nil), "pbcalendar.DeleteEventResponse")
	proto.RegisterType((*MoveEventRequest)(nil), "pbcalendar.MoveEventRequest")
	proto.RegisterType((*MoveEventResponse)(nil), "pbcalendar.MoveEventResponse")
	proto.RegisterType((*SinceEventsRequest)(nil), "pbcalendar.SinceEventsRequest")
	proto.RegisterType((*SinceEvent)(nil), "pbcalendar.SinceEvent")
	proto.RegisterType((*SinceEventsResponse)(nil), "pbcalendar.SinceEventsResponse")
	proto.RegisterType((*Count)(nil), "pbcalendar.Count")
	proto.RegisterType((*Date)(nil), "pbcalendar.Date")
	proto.RegisterType((*EventsForDayRequest)(nil), "pbcalendar.EventsForDayRequest")
	proto.RegisterType((*EventsForWeekRequest)(nil), "pbcalendar.EventsForWeekRequest")
	proto.RegisterType((*EventsForMonthRequest)(nil), "pbcalendar.EventsForMonthRequest")
}

func init() { proto.RegisterFile("mycalendar.proto", fileDescriptor_9a09cb90c53a1eb3) }

var fileDescriptor_9a09cb90c53a1eb3 = []byte{
	// 525 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x55, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x95, 0x89, 0x1d, 0x94, 0x31, 0xa0, 0x74, 0x53, 0x2a, 0x2b, 0xa2, 0x60, 0x2c, 0x0e, 0x11,
	0x08, 0x1f, 0xc2, 0x8d, 0x03, 0x12, 0xc4, 0xad, 0x7a, 0x49, 0x24, 0xdc, 0x03, 0xe2, 0x82, 0xb4,
	0x75, 0x26, 0xc2, 0x22, 0xde, 0x0d, 0xf6, 0xba, 0x28, 0x3f, 0xc0, 0x99, 0x23, 0x9f, 0x8b, 0x76,
	0x6d, 0xd7, 0xbb, 0xc4, 0xa1, 0x42, 0x28, 0xdc, 0x66, 0x66, 0x67, 0xde, 0xbc, 0xdd, 0x37, 0x63,
	0xc3, 0x30, 0xdb, 0x26, 0x74, 0x8d, 0x6c, 0x49, 0xf3, 0x70, 0x93, 0x73, 0xc1, 0x09, 0x6c, 0xae,
	0x9a, 0x48, 0xb0, 0x02, 0x32, 0xcb, 0x91, 0x0a, 0x3c, 0xbb, 0x46, 0x26, 0x62, 0xfc, 0x5a, 0x62,
	0x21, 0x48, 0x08, 0x03, 0xba, 0xc6, 0x5c, 0x88, 0x34, 0x43, 0xcf, 0xf2, 0xad, 0x89, 0x3b, 0x1d,
	0x86, 0x6d, 0x55, 0x18, 0x51, 0x81, 0x71, 0x9b, 0x42, 0x7c, 0x70, 0x53, 0xb6, 0xe2, 0x79, 0x46,
	0x45, 0xca, 0x99, 0x77, 0xc7, 0xb7, 0x26, 0x83, 0x58, 0x0f, 0x05, 0x2f, 0x61, 0x64, 0xf4, 0x29,
	0x36, 0x9c, 0x15, 0x48, 0x4e, 0xa0, 0x5f, 0x08, 0x2a, 0xca, 0x42, 0x75, 0x19, 0xc4, 0xb5, 0x27,
	0x69, 0x45, 0xb8, 0xc6, 0xff, 0x41, 0xcb, 0xe8, 0x73, 0x0b, 0xad, 0x1f, 0x16, 0x0c, 0xe7, 0xfc,
	0xfa, 0xc0, 0xac, 0xc8, 0x73, 0xb8, 0xcb, 0xf0, 0xdb, 0x92, 0x0a, 0xf4, 0x7a, 0x7b, 0xf0, 0x9a,
	0x84, 0xe0, 0x05, 0x1c, 0x69, 0x8c, 0x6e, 0xe1, 0xff, 0x1a, 0xc8, 0x65, 0xca, 0x92, 0x2a, 0xbb,
	0x68, 0x2e, 0xf0, 0x0c, 0xec, 0x55, 0xce, 0xb3, 0xbd, 0xdc, 0xd5, 0x69, 0xf0, 0x09, 0xa0, 0xad,
	0x3d, 0x80, 0x14, 0x67, 0x30, 0x32, 0xb8, 0xd5, 0x57, 0x09, 0xa1, 0x8f, 0x2a, 0xe2, 0x59, 0x7e,
	0x6f, 0xe2, 0x4e, 0x4f, 0xf4, 0x2e, 0x6d, 0x41, 0x5c, 0x67, 0x05, 0xa7, 0xe0, 0xcc, 0x78, 0xc9,
	0x04, 0x39, 0x06, 0x27, 0x91, 0x86, 0x62, 0xe7, 0xc4, 0x95, 0x13, 0x7c, 0xb7, 0xc0, 0x96, 0xdc,
	0x08, 0x01, 0xfb, 0x23, 0xd2, 0xbc, 0x3e, 0x55, 0xb6, 0x2c, 0x99, 0x73, 0x26, 0x3e, 0x2b, 0x7a,
	0x4e, 0x5c, 0x39, 0x64, 0x08, 0xbd, 0x88, 0x6e, 0x95, 0x12, 0x4e, 0x2c, 0x4d, 0x59, 0x7b, 0xc1,
	0xcb, 0xdc, 0xb3, 0xab, 0x5a, 0x69, 0xcb, 0x27, 0x9f, 0xa7, 0xac, 0x14, 0xe8, 0x39, 0x2a, 0x5a,
	0x7b, 0x32, 0x7e, 0x89, 0x09, 0x67, 0x4b, 0xaf, 0x5f, 0xc5, 0x2b, 0x2f, 0x78, 0x0f, 0xa3, 0xea,
	0xa6, 0xe7, 0x3c, 0x8f, 0xe8, 0xb6, 0xd1, 0xe2, 0x1f, 0x68, 0x05, 0x6f, 0xe0, 0xf8, 0x06, 0xf2,
	0x03, 0xe2, 0x97, 0x3f, 0x61, 0x12, 0xb0, 0x65, 0x4a, 0x0d, 0xa9, 0xec, 0xe0, 0x2d, 0x3c, 0xbc,
	0xa9, 0x57, 0x3d, 0xfe, 0x9a, 0xd4, 0xf4, 0xa7, 0x0d, 0x30, 0xdf, 0xce, 0x6a, 0x7d, 0xc8, 0x02,
	0xdc, 0xa4, 0xdd, 0x7a, 0xf2, 0x58, 0xd7, 0x6e, 0xf7, 0xb3, 0x33, 0x7e, 0xb2, 0xf7, 0xbc, 0x1e,
	0x86, 0x05, 0xb8, 0xcb, 0x76, 0x5d, 0x4d, 0xbc, 0xdd, 0xef, 0x85, 0x89, 0xd7, 0xb5, 0xe7, 0x17,
	0x30, 0xc8, 0x9a, 0xe5, 0x21, 0x8f, 0xf4, 0xec, 0xdf, 0xb7, 0x7c, 0x7c, 0xba, 0xe7, 0xb4, 0x46,
	0x7a, 0x07, 0xf7, 0x50, 0x93, 0x93, 0x18, 0xad, 0x3b, 0x84, 0x1e, 0x1f, 0x19, 0x77, 0x55, 0x13,
	0x7b, 0x0e, 0x0f, 0xd0, 0x78, 0x7f, 0xf2, 0xb4, 0x13, 0x45, 0xd7, 0xa6, 0x0b, 0x27, 0x82, 0xfb,
	0xa8, 0xcf, 0x01, 0xf1, 0x3b, 0x61, 0xb4, 0x11, 0xe9, 0x42, 0x59, 0x80, 0x5b, 0xb4, 0xfb, 0x68,
	0xbe, 0xf5, 0xee, 0x47, 0xc4, 0x7c, 0xeb, 0x8e, 0x45, 0xbe, 0xea, 0xab, 0x9f, 0xcf, 0xab, 0x5f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0xb0, 0xfd, 0x83, 0xb6, 0x90, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MyCalendarClient is the client API for MyCalendar service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MyCalendarClient interface {
	CreateEvent(ctx context.Context, in *CreateEventRequest, opts ...grpc.CallOption) (*CreateEventResponse, error)
	DeleteEvent(ctx context.Context, in *DeleteEventRequest, opts ...grpc.CallOption) (*DeleteEventResponse, error)
	MoveEvent(ctx context.Context, in *MoveEventRequest, opts ...grpc.CallOption) (*MoveEventResponse, error)
	EventsForDay(ctx context.Context, in *EventsForDayRequest, opts ...grpc.CallOption) (*Count, error)
	EventsForMonth(ctx context.Context, in *EventsForMonthRequest, opts ...grpc.CallOption) (*Count, error)
	EventsForWeek(ctx context.Context, in *EventsForWeekRequest, opts ...grpc.CallOption) (*Count, error)
	SinceEvents(ctx context.Context, in *SinceEventsRequest, opts ...grpc.CallOption) (*SinceEventsResponse, error)
}

type myCalendarClient struct {
	cc *grpc.ClientConn
}

func NewMyCalendarClient(cc *grpc.ClientConn) MyCalendarClient {
	return &myCalendarClient{cc}
}

func (c *myCalendarClient) CreateEvent(ctx context.Context, in *CreateEventRequest, opts ...grpc.CallOption) (*CreateEventResponse, error) {
	out := new(CreateEventResponse)
	err := c.cc.Invoke(ctx, "/pbcalendar.MyCalendar/createEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *myCalendarClient) DeleteEvent(ctx context.Context, in *DeleteEventRequest, opts ...grpc.CallOption) (*DeleteEventResponse, error) {
	out := new(DeleteEventResponse)
	err := c.cc.Invoke(ctx, "/pbcalendar.MyCalendar/deleteEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *myCalendarClient) MoveEvent(ctx context.Context, in *MoveEventRequest, opts ...grpc.CallOption) (*MoveEventResponse, error) {
	out := new(MoveEventResponse)
	err := c.cc.Invoke(ctx, "/pbcalendar.MyCalendar/moveEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *myCalendarClient) EventsForDay(ctx context.Context, in *EventsForDayRequest, opts ...grpc.CallOption) (*Count, error) {
	out := new(Count)
	err := c.cc.Invoke(ctx, "/pbcalendar.MyCalendar/eventsForDay", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *myCalendarClient) EventsForMonth(ctx context.Context, in *EventsForMonthRequest, opts ...grpc.CallOption) (*Count, error) {
	out := new(Count)
	err := c.cc.Invoke(ctx, "/pbcalendar.MyCalendar/eventsForMonth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *myCalendarClient) EventsForWeek(ctx context.Context, in *EventsForWeekRequest, opts ...grpc.CallOption) (*Count, error) {
	out := new(Count)
	err := c.cc.Invoke(ctx, "/pbcalendar.MyCalendar/eventsForWeek", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *myCalendarClient) SinceEvents(ctx context.Context, in *SinceEventsRequest, opts ...grpc.CallOption) (*SinceEventsResponse, error) {
	out := new(SinceEventsResponse)
	err := c.cc.Invoke(ctx, "/pbcalendar.MyCalendar/sinceEvents", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MyCalendarServer is the server API for MyCalendar service.
type MyCalendarServer interface {
	CreateEvent(context.Context, *CreateEventRequest) (*CreateEventResponse, error)
	DeleteEvent(context.Context, *DeleteEventRequest) (*DeleteEventResponse, error)
	MoveEvent(context.Context, *MoveEventRequest) (*MoveEventResponse, error)
	EventsForDay(context.Context, *EventsForDayRequest) (*Count, error)
	EventsForMonth(context.Context, *EventsForMonthRequest) (*Count, error)
	EventsForWeek(context.Context, *EventsForWeekRequest) (*Count, error)
	SinceEvents(context.Context, *SinceEventsRequest) (*SinceEventsResponse, error)
}

// UnimplementedMyCalendarServer can be embedded to have forward compatible implementations.
type UnimplementedMyCalendarServer struct {
}

func (*UnimplementedMyCalendarServer) CreateEvent(ctx context.Context, req *CreateEventRequest) (*CreateEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEvent not implemented")
}
func (*UnimplementedMyCalendarServer) DeleteEvent(ctx context.Context, req *DeleteEventRequest) (*DeleteEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteEvent not implemented")
}
func (*UnimplementedMyCalendarServer) MoveEvent(ctx context.Context, req *MoveEventRequest) (*MoveEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MoveEvent not implemented")
}
func (*UnimplementedMyCalendarServer) EventsForDay(ctx context.Context, req *EventsForDayRequest) (*Count, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EventsForDay not implemented")
}
func (*UnimplementedMyCalendarServer) EventsForMonth(ctx context.Context, req *EventsForMonthRequest) (*Count, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EventsForMonth not implemented")
}
func (*UnimplementedMyCalendarServer) EventsForWeek(ctx context.Context, req *EventsForWeekRequest) (*Count, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EventsForWeek not implemented")
}
func (*UnimplementedMyCalendarServer) SinceEvents(ctx context.Context, req *SinceEventsRequest) (*SinceEventsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SinceEvents not implemented")
}

func RegisterMyCalendarServer(s *grpc.Server, srv MyCalendarServer) {
	s.RegisterService(&_MyCalendar_serviceDesc, srv)
}

func _MyCalendar_CreateEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MyCalendarServer).CreateEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbcalendar.MyCalendar/CreateEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MyCalendarServer).CreateEvent(ctx, req.(*CreateEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MyCalendar_DeleteEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MyCalendarServer).DeleteEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbcalendar.MyCalendar/DeleteEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MyCalendarServer).DeleteEvent(ctx, req.(*DeleteEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MyCalendar_MoveEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MoveEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MyCalendarServer).MoveEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbcalendar.MyCalendar/MoveEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MyCalendarServer).MoveEvent(ctx, req.(*MoveEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MyCalendar_EventsForDay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventsForDayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MyCalendarServer).EventsForDay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbcalendar.MyCalendar/EventsForDay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MyCalendarServer).EventsForDay(ctx, req.(*EventsForDayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MyCalendar_EventsForMonth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventsForMonthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MyCalendarServer).EventsForMonth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbcalendar.MyCalendar/EventsForMonth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MyCalendarServer).EventsForMonth(ctx, req.(*EventsForMonthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MyCalendar_EventsForWeek_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EventsForWeekRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MyCalendarServer).EventsForWeek(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbcalendar.MyCalendar/EventsForWeek",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MyCalendarServer).EventsForWeek(ctx, req.(*EventsForWeekRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MyCalendar_SinceEvents_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SinceEventsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MyCalendarServer).SinceEvents(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbcalendar.MyCalendar/SinceEvents",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MyCalendarServer).SinceEvents(ctx, req.(*SinceEventsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MyCalendar_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pbcalendar.MyCalendar",
	HandlerType: (*MyCalendarServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "createEvent",
			Handler:    _MyCalendar_CreateEvent_Handler,
		},
		{
			MethodName: "deleteEvent",
			Handler:    _MyCalendar_DeleteEvent_Handler,
		},
		{
			MethodName: "moveEvent",
			Handler:    _MyCalendar_MoveEvent_Handler,
		},
		{
			MethodName: "eventsForDay",
			Handler:    _MyCalendar_EventsForDay_Handler,
		},
		{
			MethodName: "eventsForMonth",
			Handler:    _MyCalendar_EventsForMonth_Handler,
		},
		{
			MethodName: "eventsForWeek",
			Handler:    _MyCalendar_EventsForWeek_Handler,
		},
		{
			MethodName: "sinceEvents",
			Handler:    _MyCalendar_SinceEvents_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mycalendar.proto",
}
