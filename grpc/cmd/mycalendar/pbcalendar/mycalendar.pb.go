// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mycalendar.proto

package pbcalendar

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Result struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a09cb90c53a1eb3, []int{0}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type Date struct {
	Year                 int32    `protobuf:"varint,1,opt,name=Year,proto3" json:"Year,omitempty"`
	Month                int32    `protobuf:"varint,2,opt,name=Month,proto3" json:"Month,omitempty"`
	Day                  int32    `protobuf:"varint,3,opt,name=Day,proto3" json:"Day,omitempty"`
	Hour                 int32    `protobuf:"varint,4,opt,name=Hour,proto3" json:"Hour,omitempty"`
	Minute               int32    `protobuf:"varint,5,opt,name=Minute,proto3" json:"Minute,omitempty"`
	Second               int32    `protobuf:"varint,6,opt,name=Second,proto3" json:"Second,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Date) Reset()         { *m = Date{} }
func (m *Date) String() string { return proto.CompactTextString(m) }
func (*Date) ProtoMessage()    {}
func (*Date) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a09cb90c53a1eb3, []int{1}
}

func (m *Date) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Date.Unmarshal(m, b)
}
func (m *Date) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Date.Marshal(b, m, deterministic)
}
func (m *Date) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Date.Merge(m, src)
}
func (m *Date) XXX_Size() int {
	return xxx_messageInfo_Date.Size(m)
}
func (m *Date) XXX_DiscardUnknown() {
	xxx_messageInfo_Date.DiscardUnknown(m)
}

var xxx_messageInfo_Date proto.InternalMessageInfo

func (m *Date) GetYear() int32 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *Date) GetMonth() int32 {
	if m != nil {
		return m.Month
	}
	return 0
}

func (m *Date) GetDay() int32 {
	if m != nil {
		return m.Day
	}
	return 0
}

func (m *Date) GetHour() int32 {
	if m != nil {
		return m.Hour
	}
	return 0
}

func (m *Date) GetMinute() int32 {
	if m != nil {
		return m.Minute
	}
	return 0
}

func (m *Date) GetSecond() int32 {
	if m != nil {
		return m.Second
	}
	return 0
}

type Event struct {
	Alerttime            *Date    `protobuf:"bytes,1,opt,name=alerttime,proto3" json:"alerttime,omitempty"`
	Information          string   `protobuf:"bytes,2,opt,name=information,proto3" json:"information,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a09cb90c53a1eb3, []int{2}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetAlerttime() *Date {
	if m != nil {
		return m.Alerttime
	}
	return nil
}

func (m *Event) GetInformation() string {
	if m != nil {
		return m.Information
	}
	return ""
}

func init() {
	proto.RegisterType((*Result)(nil), "pbcalendar.Result")
	proto.RegisterType((*Date)(nil), "pbcalendar.Date")
	proto.RegisterType((*Event)(nil), "pbcalendar.Event")
}

func init() { proto.RegisterFile("mycalendar.proto", fileDescriptor_9a09cb90c53a1eb3) }

var fileDescriptor_9a09cb90c53a1eb3 = []byte{
	// 246 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x55, 0x9a, 0x44, 0xe4, 0xba, 0x84, 0x13, 0x42, 0x16, 0x53, 0x94, 0x89, 0x29, 0x12,
	0xe5, 0x07, 0x30, 0x50, 0x24, 0x96, 0x2c, 0x66, 0xea, 0xe8, 0x36, 0x87, 0x88, 0x94, 0xd8, 0x95,
	0x73, 0x41, 0xca, 0x1f, 0xe0, 0x77, 0x23, 0x9f, 0x83, 0x9a, 0xed, 0xbd, 0xcf, 0x7e, 0xbe, 0xe7,
	0x83, 0x62, 0x98, 0xcf, 0xa6, 0x27, 0xdb, 0x1a, 0x5f, 0x5f, 0xbc, 0x63, 0x87, 0x70, 0x39, 0xfd,
	0x93, 0xaa, 0x84, 0x4c, 0xd3, 0x38, 0xf5, 0x8c, 0x0f, 0x90, 0x8d, 0x6c, 0x78, 0x1a, 0xd5, 0xa6,
	0xdc, 0x3c, 0xe5, 0x7a, 0x71, 0xd5, 0xef, 0x06, 0x92, 0x83, 0x61, 0x42, 0x84, 0xe4, 0x48, 0xc6,
	0xcb, 0x71, 0xaa, 0x45, 0xe3, 0x3d, 0xa4, 0x8d, 0xb3, 0xfc, 0xad, 0x6e, 0x04, 0x46, 0x83, 0x05,
	0x6c, 0x0f, 0x66, 0x56, 0x5b, 0x61, 0x41, 0x86, 0xec, 0x87, 0x9b, 0xbc, 0x4a, 0x62, 0x36, 0xe8,
	0x30, 0xb0, 0xe9, 0xec, 0xc4, 0xa4, 0x52, 0xa1, 0x8b, 0x0b, 0xfc, 0x93, 0xce, 0xce, 0xb6, 0x2a,
	0x8b, 0x3c, 0xba, 0xea, 0x08, 0xe9, 0xfb, 0x0f, 0x59, 0xc6, 0x1a, 0x72, 0xd3, 0x93, 0x67, 0xee,
	0x06, 0x92, 0x36, 0xbb, 0x7d, 0x51, 0x5f, 0xff, 0x54, 0x87, 0xb6, 0xfa, 0x7a, 0x05, 0x4b, 0xd8,
	0x75, 0xf6, 0xcb, 0xf9, 0xc1, 0x70, 0xe7, 0xac, 0x54, 0xcd, 0xf5, 0x1a, 0xed, 0x5f, 0x01, 0x9a,
	0xf9, 0x6d, 0xc9, 0xe3, 0x33, 0xdc, 0x9a, 0xb6, 0x8d, 0xb3, 0xee, 0xd6, 0x0f, 0x0b, 0x7a, 0xc4,
	0x35, 0x8a, 0xcb, 0x3b, 0x65, 0xb2, 0xd9, 0x97, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1d, 0x02,
	0x0d, 0x9e, 0x6d, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MyCalendarClient is the client API for MyCalendar service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MyCalendarClient interface {
	AddEvent(ctx context.Context, in *Event, opts ...grpc.CallOption) (*Result, error)
}

type myCalendarClient struct {
	cc *grpc.ClientConn
}

func NewMyCalendarClient(cc *grpc.ClientConn) MyCalendarClient {
	return &myCalendarClient{cc}
}

func (c *myCalendarClient) AddEvent(ctx context.Context, in *Event, opts ...grpc.CallOption) (*Result, error) {
	out := new(Result)
	err := c.cc.Invoke(ctx, "/pbcalendar.MyCalendar/addEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MyCalendarServer is the server API for MyCalendar service.
type MyCalendarServer interface {
	AddEvent(context.Context, *Event) (*Result, error)
}

// UnimplementedMyCalendarServer can be embedded to have forward compatible implementations.
type UnimplementedMyCalendarServer struct {
}

func (*UnimplementedMyCalendarServer) AddEvent(ctx context.Context, req *Event) (*Result, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddEvent not implemented")
}

func RegisterMyCalendarServer(s *grpc.Server, srv MyCalendarServer) {
	s.RegisterService(&_MyCalendar_serviceDesc, srv)
}

func _MyCalendar_AddEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Event)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MyCalendarServer).AddEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pbcalendar.MyCalendar/AddEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MyCalendarServer).AddEvent(ctx, req.(*Event))
	}
	return interceptor(ctx, in, info, handler)
}

var _MyCalendar_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pbcalendar.MyCalendar",
	HandlerType: (*MyCalendarServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "addEvent",
			Handler:    _MyCalendar_AddEvent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "mycalendar.proto",
}
